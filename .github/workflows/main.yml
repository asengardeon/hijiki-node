name: CI/CD to MAIN BRANCH

on:
  push:
    branches:
      - main
jobs:
  build_on_merge_to_main:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node
      uses: actions/setup-node@v4
      with:
        node-version: '>=18.18.0'
        registry-url: 'https://registry.npmjs.org'
    #RELEASE VERSION
    - name: Install dependencies npm
      run: |
        npm install
    - name: Extract version number
      id: version_number
      run: echo "VERSION_NUMBER=1.0.${{github.run_number}}" >> $GITHUB_OUTPUT
    - name: Update version in package.json
      run: >-
        echo 'version is ${{ steps.version_number.outputs.VERSION_NUMBER }}' &&
        sed -i 's/{{VERSION_PLACEHOLDER}}/1.0.${{github.run_number}}/g' package.json
    #-=---------
    - name: Install Compose
      shell: bash
      run: |
        set -x
        set -e
        arch="$(uname)-$(uname -m)"
        flavor=$(echo $arch | tr '[:upper:]' '[:lower:]' )
        
        DOWNLOAD_URL="https://github.com/docker/compose/releases/download/v2.1.0/docker-compose-${flavor}"
        if [[ "v2.1.0" == "latest" ]]; then
          DOWNLOAD_URL=$(curl -fL https://api.github.com/repos/docker/compose/releases/latest | jq -r '.assets[] | select(.name == "docker-compose-linux-x86_64") | .browser_download_url')
        fi
        echo "Download Compose v2.1.0 for ${flavor} from ${DOWNLOAD_URL}"
        mkdir -p ~/.docker/cli-plugins/
        curl -fsSL "$DOWNLOAD_URL" -o ~/.docker/cli-plugins/docker-compose
        chmod +x ~/.docker/cli-plugins/docker-compose

    - name: Start containers
      run: ~/.docker/cli-plugins/docker-compose -f "docker-compose.yml" up -d --force-recreate
    - name: Await container
      shell: bash
      run: |
        sleep 5
    - name: Run tests
      run: npm run test_coverage
    - name: Stop containers
      if: always()
      run: ~/.docker/cli-plugins/docker-compose down
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
    # RELEASE
    - name: Install dependencies and build ðŸ”§
      run: npm ci
    - name: Publish package on NPM ðŸ“¦
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
